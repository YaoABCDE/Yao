import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as e,o as n}from"./app-DrQhfaqv.js";const t="/assets/bywave-DTWxIazN.png",l="/assets/proxy_terminal-DnoNg-cR.png",r="/assets/powershell-proxy-BSwfuU3I.png",h="/assets/v2rayn-C3HjUjb0.png",p="/assets/windows-proxy-BGH6Xb9w.png",d="/assets/android-v2rayn-BeVnkXUs.png",o={};function k(c,i){return n(),a("div",null,i[0]||(i[0]=[e('<h1 id="_1-科学上网与本地代理教程" tabindex="-1"><a class="header-anchor" href="#_1-科学上网与本地代理教程"><span>1.科学上网与本地代理教程</span></a></h1><p>为了学习目的，诸如国外的一些优秀网站访问速度会很慢，甚至是无法访问，导致一些依赖的下载和软件的更新无法完成，资料都无法查阅。<br> 这个时候可能需要一些使用一些代理手段。</p><p>我之前使用过的方案是 <a href="https://cn.bing.com/search?q=ByWave" target="_blank" rel="noopener noreferrer">ByWave</a> ，实测还蛮好用的，一年也就一百来块挺实惠。<br><img src="'+t+`" alt="ByWave" loading="lazy"></p><blockquote><p>点进去之后，直接注册/登录，然后购买对应的服务，然后下载安装即可。</p></blockquote><h2 id="自建代理服务的方案" tabindex="-1"><a class="header-anchor" href="#自建代理服务的方案"><span>自建代理服务的方案</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意</p><p>以下方案可能需要你对 <code>Linux 运维</code> 以及 <code>云服务器的采购</code> 具有一定的熟练度。</p></div><ol><li><p>准备一台 <strong>海外服务器</strong>， 假设名为:<code>服务器A</code> (假设 IP 为:<code>456.456.456.4567</code>) 并设置安全组开放 <code>10086</code> 端口。</p></li><li><p>然后在 <strong><code>服务器A</code></strong> 上搭建搭建 <a href="https://github.com/233boy/v2ray" target="_blank" rel="noopener noreferrer">v2ray</a> 服务，并设置端口为 <code>10086</code> 。如果步骤没问题，你会获得一些配置参数和 v2ray 协议链接。</p></li><li><p>然后下载一个 <a href="https://github.com/v2rayU/v2rayU" target="_blank" rel="noopener noreferrer">代理客户端</a> ，并把协议链接录入测试 <code>456.456.456.4567:10086</code> 的代理服务是否可用。</p></li></ol><details class="hint-container details"><summary>详情</summary><p>亲测，这里服务器的采购可以使用 <a href="https://www.aliyun.com/" target="_blank" rel="noopener noreferrer">阿里云</a> 等国内厂商没有问题。但是依然推荐一些国外厂商的云主机，比如 <a href="https://www.vpsor.cn" target="_blank" rel="noopener noreferrer">硅云</a>。<br> 然后服务器地点一般选择 香港、新加坡 延迟会比较低。</p><p>代理客户端的选择后文有相关说明。</p></details><h2 id="保护你的代理服务器" tabindex="-1"><a class="header-anchor" href="#保护你的代理服务器"><span>保护你的代理服务器</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意</p><p>如果你已经自建代理服务并用起来了，但是别开心的太早，因为<code>456.456.456.4567</code>的 IP 可能过几天就会被<code>GFW</code>扫描并封禁。<br> 虽然你可以更换 IP ，但是这毕竟很麻烦，而且并不安全，而且更换 IP 会产生一定的费用。<br> 这个时候你需要采用如下做法来保护你的海外服务器以及 IP。</p><blockquote><p>需要对 Nginx 有一定的熟练度。</p></blockquote></div><ol start="4"><li>再准备一台国内的服务器，假设名为:<strong><code>服务器B</code></strong> (假设 IP 为:<code>123.123.123.1234</code>) 并设置安全组开放 <code>10809</code> 端口。</li><li>在 <strong><code>服务器B</code></strong> 中安装 Nginx 并添加如下配置:</li></ol><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">stream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  upstream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> v2ray</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    server</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 456.456</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">456.4567</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10086</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    listen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10809</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    proxy_pass</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> v2ray</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    ssl_preread</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>详情</summary><p>这一步的意思是: 在 <strong>国内<code>服务器B</code></strong> 中来自 <code>10809</code> 端口的请求将全部转发给 <strong>国外</strong> <code>服务器 A</code> 的<code>10086</code> 端口。</p></details><ol start="6"><li>打开<a href="https://github.com/v2rayU/v2rayU" target="_blank" rel="noopener noreferrer">代理客户端</a>的设置界面，将 <code>456.456.456.4567:10086</code> 代理服务修改为 <code>123.123.123.1234:10809</code>。然后测试代理服务是否可用。</li></ol><details class="hint-container details"><summary>详情</summary><p>这一步的意思是，在其它设置不变的情况下，将原本的 <code>服务器A</code> 的 地址和端口换成 <code>服务器B</code> 的。</p><p>到这一步之后，你每次使用代理客户端时，实际上全都是在请求国内的服务器，这时<code>GFW</code>的扫描不会发觉任何异常，也无法封禁国内 IP。</p></details><ol start="7"><li>修改 <strong><code>服务器A</code></strong> 的安全组，让 <code>10086</code> 端口只允许 ip 为 <code>123.123.123.1234</code> 的机器访问。</li></ol><details class="hint-container details"><summary>详情</summary><p>到这一步之后 <code>GFW</code> 扫描 <strong><code>服务器A</code></strong> 就不会发现任何异常，毕竟这个端口的安全组会阻拦 <code>GFW</code> 的访问，表面看它就是一个平平无奇的服务器而已。<br> 然后国内的 <strong><code>服务器B</code></strong> 本身就在国内，不受 <code>GFW</code> 约束。</p><p>日常的代理客户端，只会被抓到它在请求国内服务器，则 IP 地址安全。</p><blockquote><p>当然，两台服务的成本确实会有点点高，实测这种方案最为安全和稳定。</p></blockquote></details><h2 id="本地代理客户端的选择" tabindex="-1"><a class="header-anchor" href="#本地代理客户端的选择"><span>本地代理客户端的选择</span></a></h2><p><a href="https://github.com/v2rayU/v2rayU" target="_blank" rel="noopener noreferrer">https://github.com/v2rayU/v2rayU</a></p><p><strong>Windows:</strong><br><a href="https://github.com/2dust/v2rayn/releases" target="_blank" rel="noopener noreferrer">https://github.com/2dust/v2rayn/releases</a></p><details class="hint-container details"><summary>详情</summary><p>v2rayN 的使安装方法是: 下载 <code>v2rayN-With-Core.zip</code> 和 <code>v2rayN.zip</code> 并解压，然后将前者目录中的内容覆盖替换到后者目录中，然后就可以双击 <code>v2rayN.exe</code> 文件进行使用了。</p></details><p><strong>安卓:</strong><br><a href="https://github.com/2dust/v2rayNG/releases" target="_blank" rel="noopener noreferrer">https://github.com/2dust/v2rayNG/releases</a></p><details class="hint-container details"><summary>详情</summary><p>下载对应的 <code>apk</code> 文件然后安装即可。如果打不开或安装失败就多换几个安装包试试。</p></details><p><strong>macOS:</strong><br><a href="https://github.com/yanue/V2rayU/releases" target="_blank" rel="noopener noreferrer">https://github.com/yanue/V2rayU/releases</a></p><details class="hint-container details"><summary>详情</summary><p>下载对应的 <code>.dmg</code> 文件安装即可。如果打不开或安装失败就多换几个安装包试试。</p></details><h2 id="设置命令行代理" tabindex="-1"><a class="header-anchor" href="#设置命令行代理"><span>设置命令行代理</span></a></h2><p>第一步，如下图所示，打开代理软件(这里用的是 V2rayU)，设置好 http 端口，确认系统代理已生效</p><figure><img src="`+l+`" alt="确认 macOS 系统代理已生效" tabindex="0" loading="lazy"><figcaption>确认 macOS 系统代理已生效</figcaption></figure><p>第二步，设置如下环境变量。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#  ~/.zshenv 或 ~/.bashrc 文件中:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> http_proxy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">://</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">127</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">10809</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> https_proxy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">://</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">127</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">10809</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ALL_PROXY</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">://</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">127</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">10809</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>Windows，Linux，WSL，MacOS 基本同理</p></div><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Powershell 是这么设置的</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$env:ALL_PROXY</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://127.0.0.1:10809&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 全局永久生效</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#  我的电脑-&gt;属性-&gt;更改设置-&gt;高级-&gt;环境变量，添加环境变量</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#  变量名  ALL_PROXY</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#  变量值  http://127.0.0.1:10809</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+r+'" alt="PowerShell 命令行访问 Google" tabindex="0" loading="lazy"><figcaption>PowerShell 命令行访问 Google</figcaption></figure><figure><img src="'+h+'" alt="Windows 下 v2rayN 使用截图" tabindex="0" loading="lazy"><figcaption>Windows 下 v2rayN 使用截图</figcaption></figure><figure><img src="'+p+'" alt="检查Windows 系统代理是否顺利开启" tabindex="0" loading="lazy"><figcaption>检查Windows 系统代理是否顺利开启</figcaption></figure><figure><img src="'+d+`" alt="安卓系统使用 v2rayNG 访问 google play 和 google.com" tabindex="0" loading="lazy"><figcaption>安卓系统使用 v2rayNG 访问 google play 和 <a href="http://google.com" target="_blank" rel="noopener noreferrer">google.com</a></figcaption></figure><h2 id="v2rayu-的卸载" tabindex="-1"><a class="header-anchor" href="#v2rayu-的卸载"><span>v2rayU 的卸载</span></a></h2><p>在 macOS 下，正常移入回收站是无法干净的删除 v2rayU 的，还需要使用如下命令彻底删除:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/Library/LaunchAgents/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/bin/launchctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remove</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yanue.v2rayu.v2ray-core</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/bin/launchctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remove</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yanue.v2rayu.http</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/Library/LaunchAgents/yanue.v2rayu.v2ray-core.plist</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/Library/Preferences/net.yanue.V2rayU.plist</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/Library/Logs/V2rayU.log</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -fr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.V2rayU/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,39)]))}const m=s(o,[["render",k],["__file","proxy_wall_ready.html.vue"]]),v=JSON.parse('{"path":"/tutorial/proxy_wall_ready.html","title":"1.科学上网与本地代理教程","lang":"zh-CN","frontmatter":{"category":["教程"],"tag":["代理","科学上网","技巧","教程"],"order":1,"permalink":"/tutorial/proxy_wall_ready.html","description":"1.科学上网与本地代理教程 为了学习目的，诸如国外的一些优秀网站访问速度会很慢，甚至是无法访问，导致一些依赖的下载和软件的更新无法完成，资料都无法查阅。 这个时候可能需要一些使用一些代理手段。 我之前使用过的方案是 ByWave ，实测还蛮好用的，一年也就一百来块挺实惠。 ByWave 点进去之后，直接注册/登录，然后购买对应的服务，然后下载安装即可。...","head":[["meta",{"property":"og:url","content":"https://blog.mo7.cc/tutorial/proxy_wall_ready.html"}],["meta",{"property":"og:site_name","content":"墨七"}],["meta",{"property":"og:title","content":"1.科学上网与本地代理教程"}],["meta",{"property":"og:description","content":"1.科学上网与本地代理教程 为了学习目的，诸如国外的一些优秀网站访问速度会很慢，甚至是无法访问，导致一些依赖的下载和软件的更新无法完成，资料都无法查阅。 这个时候可能需要一些使用一些代理手段。 我之前使用过的方案是 ByWave ，实测还蛮好用的，一年也就一百来块挺实惠。 ByWave 点进去之后，直接注册/登录，然后购买对应的服务，然后下载安装即可。..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-07T14:29:24.000Z"}],["meta",{"property":"article:tag","content":"代理"}],["meta",{"property":"article:tag","content":"科学上网"}],["meta",{"property":"article:tag","content":"技巧"}],["meta",{"property":"article:tag","content":"教程"}],["meta",{"property":"article:modified_time","content":"2024-10-07T14:29:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1.科学上网与本地代理教程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-07T14:29:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"墨七\\",\\"url\\":\\"https://mo7.cc\\",\\"email\\":\\"mo7@mo7.cc\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://blog.mo7.cc/atom.xml","title":"墨七 Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://blog.mo7.cc/feed.json","title":"墨七 JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://blog.mo7.cc/rss.xml","title":"墨七 RSS Feed"}]]},"headers":[{"level":2,"title":"自建代理服务的方案","slug":"自建代理服务的方案","link":"#自建代理服务的方案","children":[]},{"level":2,"title":"保护你的代理服务器","slug":"保护你的代理服务器","link":"#保护你的代理服务器","children":[]},{"level":2,"title":"本地代理客户端的选择","slug":"本地代理客户端的选择","link":"#本地代理客户端的选择","children":[]},{"level":2,"title":"设置命令行代理","slug":"设置命令行代理","link":"#设置命令行代理","children":[]},{"level":2,"title":"v2rayU 的卸载","slug":"v2rayu-的卸载","link":"#v2rayu-的卸载","children":[]}],"git":{"createdTime":1728311364000,"updatedTime":1728311364000,"contributors":[{"name":"YAO","email":"1964877312@qq.com","commits":1}]},"readingTime":{"minutes":4.47,"words":1342},"filePathRelative":"tutorial/1.科学上网与本地代理教程.md","localizedDate":"2024年10月7日","excerpt":"\\n<p>为了学习目的，诸如国外的一些优秀网站访问速度会很慢，甚至是无法访问，导致一些依赖的下载和软件的更新无法完成，资料都无法查阅。<br>\\n这个时候可能需要一些使用一些代理手段。</p>\\n<p>我之前使用过的方案是 <a href=\\"https://cn.bing.com/search?q=ByWave\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ByWave</a> ，实测还蛮好用的，一年也就一百来块挺实惠。<br>\\n</p>\\n<blockquote>\\n<p>点进去之后，直接注册/登录，然后购买对应的服务，然后下载安装即可。</p>\\n</blockquote>","autoDesc":true}');export{m as comp,v as data};
