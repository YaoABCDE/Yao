import comp from "D:/node/Yaoweb5/.vscode/.vp-temp/pages/tutorial/vuepress-hope/step_md_components.html.vue"
const data = JSON.parse("{\"path\":\"/tutorial/vuepress-hope/step_md_components.html\",\"title\":\"5.在 md 中使用自定义组件\",\"lang\":\"zh-CN\",\"frontmatter\":{\"category\":[\"博客搭建教程\"],\"tag\":[\"教程\"],\"order\":5,\"permalink\":\"/tutorial/vuepress-hope/step_md_components.html\",\"description\":\"5.在 md 中使用自定义组件 上一个章节讲到的是使用全局组件来对主题和博客进行修改，其实本质上是通过 vue 组件的形式进行了全局的 js 和 css 的引入。和直接 <link href=\\\"xxx\\\" /> <script src=\\\"xxx\\\"> 的形式没啥区别。不过使用 vue 组件看起来比较优雅而已。 而且 vue 组件的代码内容一定会经过 vit...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://yaoabcde.github.io/Yao/Yao/tutorial/vuepress-hope/step_md_components.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"YAO\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"5.在 md 中使用自定义组件\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"5.在 md 中使用自定义组件 上一个章节讲到的是使用全局组件来对主题和博客进行修改，其实本质上是通过 vue 组件的形式进行了全局的 js 和 css 的引入。和直接 <link href=\\\"xxx\\\" /> <script src=\\\"xxx\\\"> 的形式没啥区别。不过使用 vue 组件看起来比较优雅而已。 而且 vue 组件的代码内容一定会经过 vit...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2024-10-07T16:48:13.000Z\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"教程\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2024-10-07T16:48:13.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"5.在 md 中使用自定义组件\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":\\\"2024-10-07T16:48:13.000Z\\\",\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Yao\\\",\\\"url\\\":\\\"https://baidu.com\\\",\\\"email\\\":\\\"1964877312@qq.com\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"全局注册，Markdown 调用\",\"slug\":\"全局注册-markdown-调用\",\"link\":\"#全局注册-markdown-调用\",\"children\":[]},{\"level\":2,\"title\":\"Markdown 局部注册使用\",\"slug\":\"markdown-局部注册使用\",\"link\":\"#markdown-局部注册使用\",\"children\":[]}],\"git\":{\"createdTime\":1728311364000,\"updatedTime\":1728319693000,\"contributors\":[{\"name\":\"YAO\",\"email\":\"1964877312@qq.com\",\"commits\":3}]},\"readingTime\":{\"minutes\":1.18,\"words\":355},\"filePathRelative\":\"tutorial/vuepress-hope/5.在md中使用自定义组件.md\",\"localizedDate\":\"2024年10月7日\",\"excerpt\":\"\\n<p>上一个章节讲到的是使用全局组件来对主题和博客进行修改，其实本质上是通过 vue 组件的形式进行了全局的 js 和 css 的引入。和直接 <code>&lt;link href=\\\"xxx\\\" /&gt;   &lt;script src=\\\"xxx\\\"&gt;</code> 的形式没啥区别。不过使用 vue 组件看起来比较优雅而已。<br>\\n而且 vue 组件的代码内容一定会经过 vite 的优化，代码的执行效率会更高。</p>\\n<p>这里讲另外两种自定义组件的使用方式:</p>\\n<h2>全局注册，Markdown 调用</h2>\\n<div class=\\\"language-js line-numbers-mode\\\" data-highlighter=\\\"shiki\\\" data-ext=\\\"js\\\" data-title=\\\"js\\\" style=\\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\\"><pre class=\\\"shiki shiki-themes one-light one-dark-pro vp-code\\\"><code><span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">import</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> { </span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\">defineClientConfig</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> } </span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">from</span><span style=\\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\\"> 'vuepress/client'</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">export</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#C678DD\\\"> default</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\"> defineClientConfig</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">  // ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">  enhance</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">({ </span><span style=\\\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\\\">app</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">, </span><span style=\\\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\\\">router</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">, </span><span style=\\\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\\\">siteData</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> }) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\\">    app</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">component</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(</span><span style=\\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\\">'MyIcon'</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">, </span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\">MyIcon</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">  // ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">});</span></span></code></pre>\\n<div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\" style=\\\"counter-reset:line-number 0\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
